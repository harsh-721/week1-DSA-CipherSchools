#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
using namespace std;
vector<vector<int>> printSpiralOrder(vector<int> const &arr, int M, int N)
{
    vector<vector<int>> mat;
    if (arr.size() == 0) {
        return mat;
    }
    mat.resize(N, vector<int>(M));
 
    int top = 0, bottom = M - 1;
    int left = 0, right = N - 1;
 
    int index = 0;
 
    while (1)
    {
        if (left > right) {
            break;
        }
        // print top row
        for (int i = left; i <= right; i++) {
            mat[top][i] = arr[index++];
        }
        top++;
 
        if (top > bottom) {
            break;
        }
        for (int i = top; i <= bottom; i++) {
            mat[i][right] = arr[index++];
        }
        right--;
 
        if (left > right) {
            break;
        }
        for (int i = right; i >= left; i--) {
            mat[bottom][i] = arr[index++];
        }
        bottom--;
 
        if (top > bottom) {
            break;
        }
        for (int i = bottom; i >= top; i--) {
            mat[i][left] = arr[index++];
        }
        left++;
    }
}
int main()
{
    // `M Ã— N` matrix
    int M = 5;
    int N = 5;
    vector<int> arr = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                    16, 17, 18, 19, 20, 21, 22, 23, 24, 25 };
 
    vector<vector<int>> matrix = printSpiralOrder(arr, M, N);
    for (auto &row: matrix) {
        for (auto &i: row) {
            cout << setw(3) << i;
        }
        cout << endl;
    }
    return 0;
}
